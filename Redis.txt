Redis
基本数据类型：string hash list set zset
特殊的数据类型：bitmap ：实现布隆过滤器，用于解决的缓存穿透
                hyperloglog：实现UV统计
事务：MULTI开启事务，后续的redis命令会逐个放入命令队列 然后exec命令逐个执行命令队列中的命令
        redis事务不支持回滚，已完成的命令不会回退
        大多数事务的失败是由语法错误或者类型错误导致的，开发期可以遇见，Redis出于对性能方面的考虑忽略的事物的回滚

持久化： RDB（默认） 和 AOF
        RDB是基于快照实现的 当符合一定条件的时候Redis 触发快照记录当前数据，并fork到一个子进程中
        父进程继续接受请求，而子进程开始向硬盘写入临时文件
        当子进程完成临时文件的写入后，会用临时文件替换旧的RDB文件

        AOF是当开始AOF以后，Redis 每执行一条命令就会将该命令写入AOF文件 通过持久化命令来实现持久化数据

分布式锁：setNX 判断返回值是否为1 注意设置key的过期时间，防止死锁。

缓存问题：
        缓存穿透：对不存在的key大量请求
                1.结果为空也缓存，设置一个较短的过期时间或者设置插入数据库后清除缓存
                2.用布隆过滤器（bitmap）
        缓存雪崩：大量热点key集中失效
                1.设置过期事件的时候加上一个随机因子，让各个Key的过期事件尽量分散
        缓存击穿：单个热点key在请求量大的时候过期
                1.setnx分布式锁
                2.双重检测锁
        
                